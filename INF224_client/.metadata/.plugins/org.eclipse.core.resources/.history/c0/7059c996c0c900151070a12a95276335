import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.AbstractAction;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JToolBar;


public class ClientApp extends JFrame implements ActionListener{

	private static final long serialVersionUID = 1L;
	
	private JButton bouton1;
	private JButton bouton2;
	private JButton bouton3;
	
	private JTextArea textArea;
	
	private Client client;
	
	public ClientApp() {
		super("My super App");
		
		getContentPane().setLayout(new BorderLayout());
		
		initializeMenuBar();
		
		initializeToolBar();
		
		
		
		getContentPane().add(new JScrollPane(getTextArea()), BorderLayout.CENTER);
		
		JPanel tmp = new JPanel();
		tmp.setLayout(new GridLayout(1, 3));
		
		tmp.add(getBouton1());
		tmp.add(getBouton2());
		tmp.add(getBouton3());
		
		getContentPane().add(tmp, BorderLayout.SOUTH);
		
		setLocationRelativeTo(null);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setSize(400, 300);
		this.setVisible(true);
	}
	
	
	private void initializeToolBar() {
		JToolBar jtb = new JToolBar("My super toolbar");
		jtb.add(new ActionBouton1());
		jtb.add(new ActionBouton2());
		jtb.add(new ActionBouton3());
		getContentPane().add(jtb, BorderLayout.NORTH);
	}


	private void initializeMenuBar() {
		JMenuBar menubar = new JMenuBar();
		JMenu action = new JMenu("Action");
		
		action.add(new ActionBouton1());
		action.add(new ActionBouton2());
		action.add(new ActionBouton3());
		
		menubar.add(action);
		
		setJMenuBar(menubar);
	}


	public JButton getBouton1(){
		if(bouton1 == null){
			bouton1 = new JButton("Bouton 1");
			bouton1.addActionListener(this);
		}
		return bouton1;
	}
	
	public JButton getBouton2(){
		if(bouton2 == null){
			bouton2 = new JButton("Bouton 2");
			bouton2.addActionListener(this);
		}
		return bouton2;
	}
	
	public JButton getBouton3(){
		if(bouton3 == null){
			bouton3 = new JButton("Exit");
			bouton3.addActionListener(this);
		}
		return bouton3;
	}
	
	public JTextArea getTextArea(){
		if(textArea == null){
			textArea = new JTextArea();
		}
		return textArea;
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource() == getBouton1()){
			getTextArea().append("Bouton 1 click\n");
		} else if(e.getSource() == getBouton2()){
			getTextArea().append("Bouton 2 click\n");
		} else if(e.getSource() == getBouton3()){
			System.exit(0);
		}
	}
	
	public static void main(String[] args) {
		new ClientApp();
	}

	
	class ActionBouton1 extends AbstractAction {

		private static final long serialVersionUID = 1L;

		public ActionBouton1() {
			super("Connect to host");
		}
		
		@Override
		public void actionPerformed(ActionEvent e) {
			String host = JOptionPane.showInputDialog("Please fill the adress of host");
			System.out.println(host);
		}
		
	}
	
	class ActionBouton2 extends AbstractAction {

		private static final long serialVersionUID = 1L;


		public ActionBouton2() {
			super("Action bouton 2");
		}
		
		
		@Override
		public void actionPerformed(ActionEvent e) {
			getTextArea().append("Bouton 2 click\n");
		}
		
	}
	
	class ActionBouton3 extends AbstractAction {

		private static final long serialVersionUID = 1L;

		public ActionBouton3() {
			super("Exit App");
		}
		
		@Override
		public void actionPerformed(ActionEvent e) {
			System.exit(0);
		}
		
	}
	
	
	
}
